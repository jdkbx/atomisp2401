diff --git a/drivers/mfd/axp20x.c b/drivers/mfd/axp20x.c
index 2468b431bb22..a296c2f69939 100644
--- a/drivers/mfd/axp20x.c
+++ b/drivers/mfd/axp20x.c
@@ -34,6 +34,8 @@
 #define AXP806_REG_ADDR_EXT_ADDR_MASTER_MODE	0
 #define AXP806_REG_ADDR_EXT_ADDR_SLAVE_MODE	BIT(4)
 
+static struct axp20x_dev *axp20x_hack = NULL;
+
 static const char * const axp20x_model_names[] = {
 	"AXP152",
 	"AXP202",
@@ -1046,6 +1048,7 @@ int axp20x_device_probe(struct axp20x_dev *axp20x)
 	}
 
 	dev_info(axp20x->dev, "AXP20X driver loaded\n");
+	axp20x_hack = axp20x;
 
 	return 0;
 }
@@ -1060,11 +1063,28 @@ int axp20x_device_remove(struct axp20x_dev *axp20x)
 
 	mfd_remove_devices(axp20x->dev);
 	regmap_del_irq_chip(axp20x->irq, axp20x->regmap_irqc);
+	axp20x_hack = NULL;
 
 	return 0;
 }
 EXPORT_SYMBOL(axp20x_device_remove);
 
+int axp20x_get_regmap(struct regmap **regmap)
+{
+	int ret = 0;
+	if(axp20x_hack)
+	{
+		*regmap = axp20x_hack->regmap;
+	}
+	else
+	{
+		*regmap = NULL;
+		ret = -ENXIO;
+	}
+	return ret;
+}
+EXPORT_SYMBOL(axp20x_get_regmap);
+
 MODULE_DESCRIPTION("PMIC MFD core driver for AXP20X");
 MODULE_AUTHOR("Carlo Caione <carlo@caione.org>");
 MODULE_LICENSE("GPL");
diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 78dc85365c4f..ee1ee8af2098 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -703,4 +703,9 @@ int axp20x_device_probe(struct axp20x_dev *axp20x);
  */
 int axp20x_device_remove(struct axp20x_dev *axp20x);
 
+/**
+ * Hack retrieve regmap for usage in atomisp module
+ */
+int axp20x_get_regmap(struct regmap **regmap);
+
 #endif /* __LINUX_MFD_AXP20X_H */
